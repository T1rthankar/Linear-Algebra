#BlueJ class context
comment0.target=Fraction
comment0.text=\r\n\ Reduced\ fractions\ returned\ by\ all\ operation\ methods\r\n\ isEqual\ method\ checks\ equality\r\n\ \r\n\ \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\r\n\ \r\n\ Defines\ a\ rational\ number\ data\ type\ which\ uses\ arbitrary-precision\ numeric\ values\r\n\ (BigIntegers)\ to\ store\ the\ numerator\ and\ denominator.\r\n\ \r\n\ All\ four\ standard\ operations\ (addition,\ subtraction,\ multiplication,\ and\ division)\r\n\ are\ defined.\r\n\ \r\n\ In\ addition,\ the\ class\ features\ three\ predefined\ rational\ numbers\:\ zero\ (called\r\n\ ZERO),\ one\ (called\ ONE),\ and\ negative\ one\ (called\ NEG_ONE).\r\n\ \r\n\ The\ class\ stores\ rational\ numbers\ in\ their\ reduced\ form\ internally.\ I.e.,\ if\ a\ Fraction\r\n\ is\ instantiated\ with\ 2\ and\ 4\ as\ the\ numerator\ and\ denominator,\ respectively,\ the\ class\r\n\ reduces\ the\ number\ to\ 1/2\ internally.\r\n\ \r\n\ Note\ to\ self\:\ Perhaps\ doing\ that\ is\ not\ such\ a\ great\ idea.\r\n\ \r\n\ @author\ Tirthankar\ Mazumder\ (lead\ contributor)\r\n\ @author\ Rohith\ Nibhanupudi\ (lead\ contributor)\r\n\ @version\ 8.10.20\r\n
comment1.params=
comment1.target=Fraction()
comment10.params=f
comment10.target=Fraction\ reduce(Fraction)
comment11.params=f
comment11.target=Fraction\ inverse(Fraction)
comment12.params=f1\ f2
comment12.target=Fraction\ gcd(Fraction,\ Fraction)
comment13.params=o
comment13.target=boolean\ equals(java.lang.Object)
comment14.params=
comment14.target=java.lang.String\ toString()
comment15.params=f
comment15.target=int\ compareTo(Fraction)
comment16.params=
comment16.target=int\ numeratorLength()
comment17.params=
comment17.target=int\ denominatorLength()
comment18.params=
comment18.target=java.math.BigInteger\ getNumerator()
comment19.params=
comment19.target=java.math.BigInteger\ getDenominator()
comment2.params=a
comment2.target=Fraction(java.lang.String)
comment20.params=args
comment20.target=void\ main(java.lang.String[])
comment3.params=b
comment3.target=Fraction(java.math.BigInteger)
comment4.params=a\ b
comment4.target=Fraction(java.lang.String,\ java.lang.String)
comment5.params=a\ b
comment5.target=Fraction(java.math.BigInteger,\ java.math.BigInteger)
comment6.params=f2
comment6.target=Fraction\ add(Fraction)
comment7.params=f2
comment7.target=Fraction\ sub(Fraction)
comment8.params=f2
comment8.target=Fraction\ mul(Fraction)
comment9.params=f2
comment9.target=Fraction\ div(Fraction)
numComments=21
